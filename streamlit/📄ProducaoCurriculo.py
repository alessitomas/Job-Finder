import streamlit as st
import google.generativeai as genai
from dotenv import load_dotenv
import os

from PyPDF2 import PdfReader

from pathlib import Path



load_dotenv()



system_instruction = """
Voc√™ √© um assistente virtual que ajuda um usu√°rio a fazer a sua melhor vers√£o de curr√≠culo para uma vaga espec√≠fica.
Voc√™ ir√° receber a descri√ß√£o de vaga espec√≠fica e o curr√≠culo do usu√°rio.
Voc√™ deve analisar os requisitos da vagas, palavras chaves, t√©cnologias esperadas. 
Forne√° feedback de quais informa√ß√µes s√£o relevantes do seu curr√≠culo para a vaga e quais informa√ß√µes seriam interessantes incluir.
Elenque pontos positivos do curr√≠culo que se alinham com a vaga caso existam.
Elenque pontos faltantes que caso o usu√°rio tivesse experi√™ncia e pudesse incluir aumentariam suas chances para a vaga.
E no final, evidencie uma nota de 0 a 10 para o curr√≠culo dele.
Sempre que fornecer um feedback, forne√ßa uma sugest√£o de melhoria com os pontos positivos e negativos.
"""


genai.configure(api_key=os.getenv("gemini_api_key"))


model = genai.GenerativeModel(
    model_name="gemini-1.5-pro-latest",
    system_instruction=system_instruction
)


def text_from_pdf(pdf):
    text = ""
    pdf_reader = PdfReader(pdf)
    for page in pdf_reader.pages:
        text += page.extract_text()
    return text




st.title('Produ√ß√£o de Curr√≠culo üìÑ')


st.write("Envie seu curr√≠culo atual e vaga descri√ß√£o da vaga desejada para receber feedbacks personalizados focados em melhorar seu curr√≠culo para a dada vaga.")


st.write("Por favor, fa√ßa o upload do seu curr√≠culo atual em formato PDF.")
cv = st.file_uploader("Upload do curr√≠culo", type=['pdf'])


if cv is not None:
    with st.spinner('Carregando curr√≠culo...'):
        text = text_from_pdf(cv)
    st.success('Curr√≠culo carregado com sucesso!')
    vaga = st.text_input('Qual vaga voc√™ deseja se candidatar? Seja o mais espec√≠fico poss√≠vel.')
    if vaga:
        initial_message = f"Ol√° Ana, gostaria de me candidatar para a vaga de {vaga}. Aqui est√° o meu curr√≠culo atual {text}."
        button = st.button('Enviar')
        if button:
            with st.spinner("Processando..."):
                ai_query = model.generate_content(initial_message)
                st.markdown(ai_query.text)

    else:
        st.warning('Por favor, preencha o campo da vaga antes de continuar.')
else:
    st.warning('Por favor, fa√ßa o upload do seu curr√≠culo antes de continuar.')
